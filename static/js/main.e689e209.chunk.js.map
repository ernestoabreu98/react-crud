{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","React","useState","tarea","setTarea","tareas","setTareas","modoEdicion","setModoEdicion","id","setId","error","setError","className","length","map","item","nombreTarea","onClick","console","log","arrayFiltrado","filter","eliminarTarea","editar","onSubmit","e","preventDefault","trim","arrayEditado","shortid","generate","type","placeholder","onChange","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAuHeA,MApHf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACNC,EADM,KACCC,EADD,OAEeH,IAAMC,SAAS,IAF9B,mBAENG,EAFM,KAEEC,EAFF,OAGyBL,IAAMC,UAAS,GAHxC,mBAGNK,EAHM,KAGOC,EAHP,OAIOP,IAAMC,SAAS,IAJtB,mBAINO,EAJM,KAIFC,EAJE,OAKaT,IAAMC,SAAS,MAL5B,mBAKNS,EALM,KAKCC,EALD,KA4Db,OACE,sBAAKC,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,yBACA,uBACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,aAAd,SACqB,IAAlBR,EAAOS,OACN,oBAAID,UAAU,kBAAd,2CAEAR,EAAOU,KAAI,SAACC,GAAD,OACT,qBAAIH,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,SAAwBG,EAAKC,cAC7B,wBACEJ,UAAU,yCACVK,QAAS,kBAhDL,SAACT,GACrBU,QAAQC,IAAIX,GACZ,IAAMY,EAAgBhB,EAAOiB,QAAO,SAACN,GAAD,OAAUA,EAAKP,KAAOA,KAC1DH,EAAUe,GA6CqBE,CAAcP,EAAKP,KAFpC,sBAMA,wBACEI,UAAU,qCACVK,QAAS,kBAhDZ,SAACF,EAAMP,GACpBU,QAAQC,IAAIJ,GACZR,GAAe,GACfW,QAAQC,IAAIb,GACZH,EAASY,EAAKC,aACdP,EAAMM,EAAKP,IA2CoBe,CAAOR,IAFxB,sBARmCA,EAAKP,YAmBlD,sBAAKI,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACGN,EAAc,eAAiB,kBAElC,uBAAMkB,SAAUlB,EArDJ,SAACmB,GAEnB,GADAA,EAAEC,kBACGxB,EAAMyB,OAGT,OAFAT,QAAQC,IAAI,0BACZR,EAAS,oCAIX,IAAMiB,EAAexB,EAAOU,KAAI,SAACC,GAAD,OAC9BA,EAAKP,KAAOA,EAAK,CAAEA,KAAIQ,YAAad,GAAUa,KAEhDV,EAAUuB,GACVrB,GAAe,GACfJ,EAAS,IACTM,EAAM,IACNE,EAAS,OAlDU,SAACc,GAEpB,GADAA,EAAEC,kBACGxB,EAAMyB,OAGT,OAFAT,QAAQC,IAAI,0BACZR,EAAS,oCAGXO,QAAQC,IAAIjB,GACZC,EAAS,IACTE,EAAU,GAAD,mBACJD,GADI,CAEP,CACEI,GAAIqB,IAAQC,WACZd,YAAad,MAGjBS,EAAS,MAETO,QAAQC,IAAIf,IAsEN,UACGM,EAAQ,sBAAME,UAAU,cAAhB,SAA+BF,IAAgB,KACxD,uBACEqB,KAAK,OACLnB,UAAU,oBACVoB,YAAY,gBACZC,SAAU,SAACR,GAAD,OAAOtB,EAASsB,EAAES,OAAOC,QACnCA,MAAOjC,IAERI,EACC,wBAAQM,UAAU,4BAAlB,oBAEA,wBAAQA,UAAU,yBAAlB,kCClGCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e689e209.chunk.js","sourcesContent":["import React from 'react';\r\nimport shortid from 'shortid';\r\n\r\nfunction App() {\r\n  const [tarea, setTarea] = React.useState('');\r\n  const [tareas, setTareas] = React.useState([]);\r\n  const [modoEdicion, setModoEdicion] = React.useState(false);\r\n  const [id, setId] = React.useState('');\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const agregarTarea = (e) => {\r\n    e.preventDefault();\r\n    if (!tarea.trim()) {\r\n      console.log('Elemento vacío');\r\n      setError('La tarea no puede estar vacía');\r\n      return;\r\n    }\r\n    console.log(tarea);\r\n    setTarea('');\r\n    setTareas([\r\n      ...tareas,\r\n      {\r\n        id: shortid.generate(),\r\n        nombreTarea: tarea,\r\n      },\r\n    ]);\r\n    setError(null);\r\n\r\n    console.log(tareas);\r\n  };\r\n\r\n  const eliminarTarea = (id) => {\r\n    console.log(id);\r\n    const arrayFiltrado = tareas.filter((item) => item.id !== id);\r\n    setTareas(arrayFiltrado);\r\n  };\r\n\r\n  const editar = (item, id) => {\r\n    console.log(item);\r\n    setModoEdicion(true);\r\n    console.log(modoEdicion);\r\n    setTarea(item.nombreTarea);\r\n    setId(item.id);\r\n  };\r\n\r\n  const editarTarea = (e) => {\r\n    e.preventDefault();\r\n    if (!tarea.trim()) {\r\n      console.log('Elemento vacío');\r\n      setError('La tarea no puede estar vacía');\r\n      return;\r\n    }\r\n\r\n    const arrayEditado = tareas.map((item) =>\r\n      item.id === id ? { id, nombreTarea: tarea } : item\r\n    );\r\n    setTareas(arrayEditado);\r\n    setModoEdicion(false);\r\n    setTarea('');\r\n    setId('');\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center\">CRUD Simple</h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <h4 className=\"text-center\">Lista de Tareas</h4>\r\n          <ul className=\"list-group\">\r\n            {tareas.length === 0 ? (\r\n              <li className=\"list-group-item\">No hay tareas para mostrar...</li>\r\n            ) : (\r\n              tareas.map((item) => (\r\n                <li className=\"list-group-item\" key={item.id}>\r\n                  <span className=\"lead\">{item.nombreTarea}</span>\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm float-right mx-2\"\r\n                    onClick={() => eliminarTarea(item.id)}\r\n                  >\r\n                    Eliminar\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-warning btn-sm float-right\"\r\n                    onClick={() => editar(item)}\r\n                  >\r\n                    Editar\r\n                  </button>\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <h4 className=\"text-center\">\r\n            {modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'}\r\n          </h4>\r\n          <form onSubmit={modoEdicion ? editarTarea : agregarTarea}>\r\n            {error ? <span className=\"text-danger\">{error}</span> : null}\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Ingrese tarea\"\r\n              onChange={(e) => setTarea(e.target.value)}\r\n              value={tarea}\r\n            />\r\n            {modoEdicion ? (\r\n              <button className=\"btn btn-warning btn-block\">Editar</button>\r\n            ) : (\r\n              <button className=\"btn btn-dark btn-block\">Agregar</button>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.jsx\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}